# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\My_Documents\Electricity_Master_Degree\【科技部計畫】自適性生物有效性轉換平台_AdaptiveRBE\DVH_Transformer_GUI\Main_process\main_1.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from functions.Self_Function import *
import threading

class Ui_DVH_Figure_Generator(object):
    def __init__(self):
        self.ROI_selected_record = []

    def setupUi(self, DVH_Figure_Generator):
        DVH_Figure_Generator.setObjectName("DVH_Figure_Generator")
        DVH_Figure_Generator.setFixedSize(1113, 659)
        self.BackGround = QtWidgets.QLabel(DVH_Figure_Generator)
        self.BackGround.setGeometry(QtCore.QRect(0, 0, 1121, 661))
        self.BackGround.setStyleSheet("background-image: url(:/BG/background/Geometric_Theme2.png);")
        self.BackGround.setText("")
        self.BackGround.setPixmap(QtGui.QPixmap(":/BG/background/Geometric_Theme2.png"))
        self.BackGround.setScaledContents(True)
        self.BackGround.setObjectName("BackGround")
        self.ROI_group = QtWidgets.QGroupBox(DVH_Figure_Generator)
        self.ROI_group.setGeometry(QtCore.QRect(110, 240, 871, 401))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        self.ROI_group.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        self.ROI_group.setFont(font)
        self.ROI_group.setObjectName("ROI_group")
        self.ROI_Discrib_label = QtWidgets.QLabel(self.ROI_group)
        self.ROI_Discrib_label.setGeometry(QtCore.QRect(20, 30, 311, 31))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        self.ROI_Discrib_label.setFont(font)
        self.ROI_Discrib_label.setObjectName("ROI_Discrib_label")
        self.ROI_scroll = QtWidgets.QScrollArea(self.ROI_group)
        self.ROI_scroll.setGeometry(QtCore.QRect(20, 70, 271, 300))
        self.ROI_scroll.setMinimumSize(QtCore.QSize(250, 300))
        self.ROI_scroll.setMaximumSize(QtCore.QSize(1920, 1080))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(231, 238, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 147, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(231, 238, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(231, 238, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 147, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(231, 238, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(231, 238, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(138, 147, 169))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(103, 110, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.ROI_scroll.setPalette(palette)
        self.ROI_scroll.setWidgetResizable(False)
        self.ROI_scroll.setObjectName("ROI_scroll")
        self.ROI_scroll_Contents = QtWidgets.QWidget()
        self.ROI_scroll_Contents.setGeometry(QtCore.QRect(0, 0, 175, 350))
        self.ROI_scroll_Contents.setObjectName("ROI_scroll_Contents")
        self.ROI_scroll.setWidget(self.ROI_scroll_Contents)
        self.diliver_Button = QtWidgets.QPushButton(self.ROI_group)
        self.diliver_Button.setGeometry(QtCore.QRect(760, 340, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.diliver_Button.setFont(font)
        self.diliver_Button.setObjectName("diliver_Button")
        self.ROI_selected_table = QtWidgets.QTableWidget(self.ROI_group)
        self.ROI_selected_table.setGeometry(QtCore.QRect(450, 70, 301, 300))
        self.ROI_selected_table.setMinimumSize(QtCore.QSize(300, 300))
        self.ROI_selected_table.setMaximumSize(QtCore.QSize(1920, 1080))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(207, 221, 254))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.HighlightedText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.ROI_selected_table.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(50)
        self.ROI_selected_table.setFont(font)
        self.ROI_selected_table.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.ROI_selected_table.setObjectName("ROI_selected_table")
        self.ROI_selected_table.setColumnCount(1)
        self.ROI_selected_table.setRowCount(1)
        item = QtWidgets.QTableWidgetItem()
        self.ROI_selected_table.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.ROI_selected_table.setHorizontalHeaderItem(0, item)
        self.ROI_check_Button = QtWidgets.QPushButton(self.ROI_group)
        self.ROI_check_Button.setGeometry(QtCore.QRect(300, 340, 93, 28))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(10)
        self.ROI_check_Button.setFont(font)
        self.ROI_check_Button.setObjectName("ROI_check_Button")
        self.ROI_uncheck_Button = QtWidgets.QPushButton(self.ROI_group)
        self.ROI_uncheck_Button.setGeometry(QtCore.QRect(300, 290, 93, 28))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(10)
        self.ROI_uncheck_Button.setFont(font)
        self.ROI_uncheck_Button.setObjectName("ROI_uncheck_Button")
        self.Input_data_group = QtWidgets.QGroupBox(DVH_Figure_Generator)
        self.Input_data_group.setGeometry(QtCore.QRect(110, 90, 871, 121))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(220, 220, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(120, 120, 120))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.Input_data_group.setPalette(palette)
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(12)
        self.Input_data_group.setFont(font)
        self.Input_data_group.setObjectName("Input_data_group")
        self.upload_label = QtWidgets.QLabel(self.Input_data_group)
        self.upload_label.setGeometry(QtCore.QRect(20, 30, 151, 31))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        self.upload_label.setFont(font)
        self.upload_label.setObjectName("upload_label")
        self.inpath_lineEdit = QtWidgets.QLineEdit(self.Input_data_group)
        self.inpath_lineEdit.setGeometry(QtCore.QRect(20, 70, 671, 31))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.inpath_lineEdit.setPalette(palette)
        self.inpath_lineEdit.setText("")
        self.inpath_lineEdit.setObjectName("inpath_lineEdit")
        self.upload_Button = QtWidgets.QPushButton(self.Input_data_group)
        self.upload_Button.setGeometry(QtCore.QRect(700, 70, 151, 28))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(10)
        self.upload_Button.setFont(font)
        self.upload_Button.setObjectName("upload_Button")
        self.process_label = QtWidgets.QLabel(self.Input_data_group)
        self.process_label.setGeometry(QtCore.QRect(640, 30, 141, 31))
        font = QtGui.QFont()
        font.setFamily("微軟正黑體")
        font.setPointSize(9)
        self.process_label.setFont(font)
        self.process_label.setObjectName("process_label")
        self.Title_label = QtWidgets.QLabel(DVH_Figure_Generator)
        self.Title_label.setGeometry(QtCore.QRect(50, 30, 291, 41))
        font = QtGui.QFont()
        font.setFamily("思源宋體")
        font.setPointSize(16)
        self.Title_label.setFont(font)
        self.Title_label.setObjectName("Title_label")
        self.BackGround.setBuddy(self.BackGround)

        self.retranslateUi(DVH_Figure_Generator)
        QtCore.QMetaObject.connectSlotsByName(DVH_Figure_Generator)

    def retranslateUi(self, DVH_Figure_Generator):
        _translate = QtCore.QCoreApplication.translate
        DVH_Figure_Generator.setWindowTitle(_translate("DVH_Figure_Generator", "DVH_Figure_Generator"))
        self.ROI_group.setWhatsThis(_translate("DVH_Figure_Generator", "<html><head/><body><p align=\"center\"><span style=\" color:#dcdcdc;\">ROI select window</span></p></body></html>"))
        self.ROI_group.setTitle(_translate("DVH_Figure_Generator", "ROI select window"))
        self.ROI_Discrib_label.setText(_translate("DVH_Figure_Generator", "<html><head/><body><p align=\"center\"><span style=\" font-size:9pt; font-weight:600; color:#dcdcdc;\">勾選欲觀測的 ROI 並填入 ROI volume [cm</span><span style=\" font-size:9pt; font-weight:600; color:#dcdcdc; vertical-align:super;\">3</span><span style=\" font-size:9pt; font-weight:600; color:#dcdcdc;\">]</span></p></body></html>"))
        self.diliver_Button.setText(_translate("DVH_Figure_Generator", "送出"))
        item = self.ROI_selected_table.verticalHeaderItem(0)
        item.setText(_translate("DVH_Figure_Generator", "Default"))
        item = self.ROI_selected_table.horizontalHeaderItem(0)
        item.setText(_translate("DVH_Figure_Generator", "ROI vol."))
        self.ROI_check_Button.setText(_translate("DVH_Figure_Generator", "確認選擇"))
        self.ROI_uncheck_Button.setText(_translate("DVH_Figure_Generator", "移除勾選"))
        self.Input_data_group.setTitle(_translate("DVH_Figure_Generator", "Data input window"))
        self.upload_label.setText(_translate("DVH_Figure_Generator", "<html><head/><body><p align=\"center\"><span style=\" font-size:9pt; font-weight:600; color:#dcdcdc;\">選取 DVH 檔案(.dvh)</span></p></body></html>"))
        self.upload_Button.setText(_translate("DVH_Figure_Generator", "選擇檔案並上傳"))
        self.process_label.setText(_translate("DVH_Figure_Generator", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.Title_label.setText(_translate("DVH_Figure_Generator", "<html><head/><body><p><span style=\" color:#cfddfe;\">DVH視覺化圖表生成器</span></p></body></html>"))
        self.ROI_check_Button.clicked.connect(self.ROIButtonClicked)
        self.ROI_uncheck_Button.clicked.connect(self.ROIUnclickButton)
        self.upload_Button.clicked.connect(self.ImportButtonClicked)
        self.diliver_Button.clicked.connect(self.VolDiliverButtonClicked)

    def ImportButtonClicked(self):
        _translate = QtCore.QCoreApplication.translate
        try:
            # 開啟檔案對話視窗 (選擇dvh檔)
            filename, filetype = QtWidgets.QFileDialog.getOpenFileName()
            if filename:
                print('Current data directory:', filename)
                self.inpath_lineEdit.setText(filename)
                self.process_label.setText(_translate("Dialog",
                                                      "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#dcdcdc;\">上傳中，請稍後...</span></p></body></html>"))
                TransTTD, TTD, TDP, ROIDU, ROIDP, ROIN = read_dvh(filename)
                self.process_label.setText(_translate("Dialog",
                                                      "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#dcdcdc;\">資料上傳完畢</span></p></body></html>"))
                layout = self.ROICheckbox(ROIN)
                layout.addWidget(self.ROI_scroll)

                # 用於後續插入列(column)資料
                Transpose_TTD = np.transpose(TransTTD).tolist()

                pathchar = filename.split('/')[:-1]
                self.savepath = "/".join(pathchar)
                self.TransTTD = Transpose_TTD
                self.TTD = TTD
                self.TDP = TDP
                self.ROIDU = ROIDU
                self.ROIDP = ROIDP
                self.ROIN = ROIN
        except:
            self.inpath_lineEdit.setText('dvh檔案不存在或是路徑錯誤')
            self.process_label.setText(_translate("Dialog",
                                                  "<html><head/><body><p align=\"center\"><span style=\" font-weight:600; color:#dcdcdc;\">錯誤警告！</span></p></body></html>"))

    def ROICheckbox(self, ROIN):
        form_layout = QtWidgets.QFormLayout()
        self.ROI_groupBox = QtWidgets.QGroupBox()
        print('\r\nROI in dvh file:')
        for n in range(len(ROIN)):
            New_ROI = QtWidgets.QCheckBox(ROIN[n])
            form_layout.addRow('%d.' % n, New_ROI)
            print('%d.' % n, New_ROI.text())
        self.ROI_groupBox.setLayout(form_layout)  # 將此layout作為ROI_groupBox的子類
        self.ROI_scroll.setWidget(self.ROI_groupBox)
        layout = QtWidgets.QVBoxLayout()
        return layout

    def ROIButtonClicked(self):
        # _translate = QtCore.QCoreApplication.translate
        try:
            # 遍歷 ROI_groupBox的子類中的所有 checkbox物件
            self.ROI_selected_list = []
            for checkbox in self.ROI_groupBox.findChildren(QtWidgets.QCheckBox):
                if checkbox.isChecked() == True:
                    self.ROI_selected_list.append(checkbox.text())
            # print('ROI selected: ', self.ROI_selected_list)

            # 連動至 Table 的功能
            # 首先將 Table 中的 default row 移除
            if self.ROI_selected_table.verticalHeaderItem(0).text() == "Default":
                self.ROI_selected_table.removeRow(self.ROI_selected_table.rowCount() - 1)
            numofROI = len(self.ROI_selected_list) # 使用者選定的ROI數量
            # print('ROI num:', numofROI)
            if numofROI == 0:  # 當ROI勾選框被清空時，如果按下確認按鈕則回歸默認－"Default"
                self.ROI_selected_table.setRowCount(1)  # 只保留單一個row
                self.ROI_selected_table.setVerticalHeaderLabels(['Default'])
                self.ROI_selected_table.clearContents()

            # 除了默認狀態外，判斷當前table是否已存在新增的ROI row
            elif self.ROI_selected_table.rowCount() >= 1:
                # print(self.ROI_selected_table.rowCount())
                RVC = 0 # Remove Volume Count: 已刪除的 ROI vol. 欄位計數
                for i in range(self.ROI_selected_table.rowCount()): # 以當前table中存在的行數判斷
                    Pre_ROI = self.ROI_selected_record[i] # 依序取得table中每行ROI的名稱
                    # print(Pre_ROI)
                    if Pre_ROI not in self.ROI_selected_list: # 如果當前table中的ROI不存在使用者勾選的ROI中
                        self.ROI_selected_table.removeRow(i-RVC) # 清除不存在當前ROI選項中的vol數值
                        RVC += 1


            # 對 Table 進行增刪
            for i in range(numofROI):  # 遍歷已選擇的ROI
                # cur_ROI = self.ROI_selected_list[i]
                position = self.ROI_selected_table.rowCount()  # 當前table中的row數量
                if position == numofROI:  # 如果當前欄位的數量 已經等於 使用者選擇的ROI數量，則不改變欄位數量
                    break
                elif position < numofROI: # 當前Table中存在的row數量 < 使用者選定的ROI數量
                    # print('sum:', position)
                    self.ROI_selected_table.insertRow(position)  # 插入新的一個row
                elif position > numofROI: # 當前Table中存在的row數量 > 使用者選定的ROI數量
                    # print('remove position num:', position)
                    self.ROI_selected_table.setRowCount(numofROI) # 將Table中的row數量與 ROI選定數量 同步
                    # removeCount = position - numofROI
                    # self.ROI_selected_table.removeRow(removeCount)

            # 增刪完row後，統一為每個row增加ROI label
            self.ROI_selected_table.setVerticalHeaderLabels(self.ROI_selected_list)
            self.ROI_selected_record = self.ROI_selected_list[:]
        except:
            print('發生例外錯誤！')
            pass

    def ROIUnclickButton(self):
        try:
            for checkbox in self.ROI_groupBox.findChildren(QtWidgets.QCheckBox):
                if checkbox.isChecked() == True:
                    checkbox.setChecked(False)
        except:
            pass

    def VolDiliverButtonClicked(self):
        try:
            numofROI = len(self.ROI_selected_list)
            if numofROI == 0:
                print('您並未選擇任何ROI，請確認是否確實勾選ROI項目')
            elif numofROI != 0:
                ROI_dataframe, interDL, interDPL = transfer2csv(self.TransTTD, self.TDP,
                                             self.ROIDU, self.ROIDP,
                                             self.ROIN, self.ROI_selected_list,
                                             self.savepath)
                # 取得使用者填入的 ROI volume
                volumes = []
                for i in range(numofROI):
                    # 偵測Table欄位中是否為空值
                    CurTableItem = self.ROI_selected_table.item(i, 0)
                    if CurTableItem == None:
                        print('已存在的欄位不可為空白')
                        break
                    elif CurTableItem.text() == "":
                        print('已存在的欄位不可為空白')
                        break
                    else:
                        volume = CurTableItem.text()
                        volumes.append(float(volume))

                if len(volumes) == len(self.ROI_selected_list):
                    # plot_dvh_curve(self.ROIN, self.TDP, self.TTD, ROI_dataframe,
                                   # self.ROI_selected_list, volumes, self.savepath)
                    # 為此函式新增一個執行序thread
                    # with threading.Thread(target=plot_dvh_curve(self.ROIN, interDPL, interDL, ROI_dataframe,
                    #                self.ROI_selected_list, volumes, self.savepath)) as dvh_thread:
                    #     dvh_thread.start()
                    dvh_thread = threading.Thread(target=plot_dvh_curve(self.ROIN, interDPL, interDL, ROI_dataframe,
                                   self.ROI_selected_list, volumes, self.savepath))
                    dvh_thread.start() # 執行此thread的目標任務target function

                    print('Your selected ROI:', self.ROI_selected_list)
                    print('Your input ROI volume:', volumes)
                    print('圖表已生成~')

        except:
            print('''*發生錯誤，請確認：
             1. ROI vol.輸入欄位內均需為數字。
             2. 請先關閉先前以同個dvh file所生成的檔案，再按下送出按鈕。
             3. 也可能是發生例外錯誤 (請確認python package已確實安裝)''')
            pass



import TEST1_rc
if __name__ == "__main__":
    import sys
    import os
    app = QtWidgets.QApplication(sys.argv)
    DVH_Figure_Generator = QtWidgets.QDialog()
    os.chdir(os.path.dirname(__file__)) # 將工作目錄變為當前執行文件所在的絕對路徑
    DVH_Figure_Generator.setWindowIcon(QtGui.QIcon('icons/takodachi.ico'))
    ui = Ui_DVH_Figure_Generator()
    ui.setupUi(DVH_Figure_Generator)
    DVH_Figure_Generator.show()
    sys.exit(app.exec_())
